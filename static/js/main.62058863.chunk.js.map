{"version":3,"sources":["api/api.js","components/TableHead.js","components/DeparturesDetails.js","components/dayCahngersDeparture.js","components/departure.js","components/ArrivalsDetails.js","components/dayChangersArrival.js","components/arrival.js","components/searchField.js","App.js","index.js"],"names":["date","Date","today","concat","getDate","getMonth","getFullYear","airlines","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","getAirlines","wrap","_context","prev","next","fetch","sent","abrupt","json","stop","apply","this","arguments","TableHead","react_default","createElement","className","DeparturesDetails","logo","number","to","terminal","planeNo","planeType","arrivalTime","Fragment","react_router_dom","exact","Button","type","alt","src","DayChangersDeparture","props","activeDay","yesterday","tomorrow","activeClassName","onClick","localtime","time","toLocaleTimeString","Departure","departure","setItemForDetails","dayCahngersDeparture","components_TableHead","map","item","index","key","ID","term","timeToStand","status","timeDepExpectCalc","airline","en","name","fltNo","ArrivalsDetails","from","DayChangersArrival","Arrival","arrival","timeLandFact","dayChangersArrival","SearchField","action","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","airlinesScadule","scadule","setState","setRightTime","body","arr","arr2","arr1","toLocaleString","i","length","toLocaleDateString","setDate","day","prevSate","_objectSpread","arrivalToShow","toConsumableArray","filter","departureToShow","prevState","details","state","_this2","_this$state","react_router","path","components_ArrivalsDetails","logoName","components_DeparturesDetails","searchField","render","components_arrival","assign","components_departure","React","Component","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.62058863.chunk.js","sourcesContent":["const date = new Date();\nconst today = `${date.getDate()}-${(date.getMonth()\n  + 1)}-${date.getFullYear()}`;\n\nexport const airlines = async() => {\n  const getAirlines = await fetch(`https://api.iev.aero/api/flights/${today}`);\n\n  return getAirlines.json();\n};\n","import React from 'react';\nimport '../index.css';\n\nfunction TableHead() {\n  return (\n    <thead>\n      <tr>\n        <th className=\"tableHead\">Terminal</th>\n        <th className=\"tableHead\">Local time</th>\n        <th className=\"tableHead\">Destination</th>\n        <th className=\"tableHead\">Status</th>\n        <th className=\"tableHead\">Airline</th>\n        <th className=\"tableHead\">Flight</th>\n        <th className=\"tableHead\" />\n      </tr>\n    </thead>\n  );\n}\n\nexport default TableHead;\n","import React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport '../index.css';\nimport { NavLink } from 'react-router-dom';\n\nfunction DeparturesDetails({ logo, number, to, terminal, planeNo, planeType, arrivalTime }) {\n  return (\n    <>\n      <NavLink to=\"/\" exact>\n        <Button type=\"button\">HOME!</Button>\n      </NavLink>\n      <img alt=\"logo\" src={logo} />\n      <p>\n        {`Number of flight: ${number}`}\n      </p>\n      <p>\n        {`Flight from: ${to}`}\n      </p>\n      <p>\n        {`Terminal: ${terminal}`}\n      </p>\n      <p>\n        {`Number of plane: ${planeNo}`}\n      </p>\n      <p>\n        {`Type of plane: ${planeType}`}\n      </p>\n      <p>\n        {`Arrival time: ${arrivalTime}`}\n      </p>\n    </>\n  );\n}\n\nexport default DeparturesDetails;\n","import React from 'react';\nimport '../index.css';\nimport { NavLink, useParams } from 'react-router-dom';\n\n\n\nfunction DayChangersDeparture({\n  props, activeDay, yesterday, today, tomorrow,\n}) {\n  // const { match } = useParams();\n  const date = new Date();\n  // console.log(match);\n\n  return (\n    <div className=\"dateContainer\">\n      <NavLink\n        to={`/departures/${yesterday()}`}\n        className=\"dateDayContainer\"\n        activeClassName=\"activeDate\"\n        onClick={() => activeDay('YESTERDAY')}\n      >\n        <div className=\"dateDay\">\n          {`${date.getDate() - 1}/${(date.getMonth() + 1)}`}\n        </div>\n        <div className=\"dateText\">YESTERDAY</div>\n      </NavLink>\n\n      <NavLink\n        to={`/departures/${today()}`}\n        className=\"dateDayContainer\"\n        activeClassName=\"activeDate\"\n        onClick={() => activeDay('TODAY')}\n      >\n        <div className=\"dateDay\">\n          {`${date.getDate()}/${(date.getMonth() + 1)}`}\n        </div>\n        <div className=\"dateText\">TODAY</div>\n      </NavLink>\n\n      <NavLink\n        to={`/departures/${tomorrow()}`}\n        className=\"dateDayContainer\"\n        activeClassName=\"activeDate\"\n        onClick={() => activeDay('TOMORROW')}\n      >\n        <div className=\"dateDay\">\n          {`${date.getDate() + 1}/${(date.getMonth() + 1)}`}\n        </div>\n        <div className=\"dateText\">TOMORROW</div>\n      </NavLink>\n    </div>\n  );\n}\n\nexport default DayChangersDeparture;\n","import React from 'react';\nimport '../index.css';\nimport { NavLink, Route } from 'react-router-dom';\nimport TableHead from './TableHead';\nimport Details from './DeparturesDetails';\nimport DayChangersDeparture from './dayCahngersDeparture';\n\nconst localtime = (time) => {\n  const numbers = new Date(time).toLocaleTimeString('uk-UA');\n\n  return numbers;\n};\n\nconst Departure = ({\n  departure, activeDay, yesterday, today, tomorrow, props, setItemForDetails,\n}) => {\n  const status = (item) => {\n    if (item.status === 'DP') {\n      return `Departed at ${localtime(item.timeDepExpectCalc)}`;\n    }\n\n    switch (item.status) {\n      case 'CX':\n        return 'Cancelled';\n      case 'CK':\n        return 'Check-in';\n      case 'ON':\n        return 'On time';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <>\n      <DayChangersDeparture\n        activeDay={activeDay}\n        yesterday={yesterday}\n        today={today}\n        tomorrow={tomorrow}\n        props={props}\n      />\n      <table>\n        <TableHead />\n        <tbody>\n          {departure.map((item, index) => (\n            <>\n              <tr\n                key={item.ID}\n                className={index % 2 === 0 ? 'row oddRow' : 'row'}\n              >\n                <td className=\"cell terminal\">\n                  <span className={item.term === 'A' ? 'terminalA' : 'terminalD'}>\n                    {item.term}\n                  </span>\n                </td>\n                <td className=\"cell\">{localtime(item.timeToStand)}</td>\n                <td className=\"cell\">{item['airportToID.city_en']}</td>\n                <td className=\"cell\">{status(item)}</td>\n                <td className=\"cell\">{item.airline.en.name}</td>\n                <td className=\"cell\">{item['carrierID.IATA'] + item.fltNo}</td>\n                <td className=\"cell lasetCell\">\n                  <NavLink to=\"/departuresDetails\" exact onClick={() => setItemForDetails([item])}>\n                    Flight details\n                  </NavLink>\n                </td>\n              </tr>\n            </>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default Departure;\n","import React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport '../index.css';\nimport { NavLink } from 'react-router-dom';\n\nfunction ArrivalsDetails({ logo, number, from, terminal, planeNo, planeType, arrivalTime }) {\n  return (\n    <>\n      <NavLink to=\"/\" exact>\n        <Button type=\"button\">HOME!</Button>\n      </NavLink>\n      <img alt=\"logo\" src={logo} />\n      <p>\n        {`Number of flight: ${number}`}\n      </p>\n      <p>\n        {`Flight from: ${from}`}\n      </p>\n      <p>\n        {`Terminal: ${terminal}`}\n      </p>\n      <p>\n        {`Number of plane: ${planeNo}`}\n      </p>\n      <p>\n        {`Type of plane: ${planeType}`}\n      </p>\n      <p>\n        {`Arrival time: ${arrivalTime}`}\n      </p>\n    </>\n  );\n}\n\nexport default ArrivalsDetails;\n","import React from 'react';\nimport '../index.css';\nimport { NavLink } from 'react-router-dom';\n\nfunction DayChangersArrival({\n  props, activeDay, yesterday, today, tomorrow,\n}) {\n  // const { match } = useParams();\n  const date = new Date();\n\n  // console.log(match);\n  return (\n    <div className=\"dateContainer\">\n      <NavLink\n        to={`/arrivals/${yesterday()}`}\n        className=\"dateDayContainer\"\n        activeClassName=\"activeDate\"\n        onClick={() => activeDay('YESTERDAY')}\n      >\n        <div className=\"dateDay\">\n          {`${date.getDate() - 1}/${(date.getMonth() + 1)}`}\n        </div>\n        <div className=\"dateText\">YESTERDAY</div>\n      </NavLink>\n\n      <NavLink\n        to={`/arrivals/${today()}`}\n        className=\"dateDayContainer\"\n        activeClassName=\"activeDate\"\n        onClick={() => activeDay('TODAY')}\n      >\n        <div className=\"dateDay\">\n          {`${date.getDate()}/${(date.getMonth() + 1)}`}\n        </div>\n        <div className=\"dateText\">TODAY</div>\n      </NavLink>\n\n      <NavLink\n        to={`/arrivals/${tomorrow()}`}\n        exact\n        className=\"dateDayContainer\"\n        activeClassName=\"activeDate\"\n        onClick={() => activeDay('TOMORROW')}\n      >\n        <div className=\"dateDay\">\n          {`${date.getDate() + 1}/${(date.getMonth() + 1)}`}\n        </div>\n        <div className=\"dateText\">TOMORROW</div>\n      </NavLink>\n    </div>\n  );\n}\n\nexport default DayChangersArrival;\n","import React from 'react';\nimport '../index.css';\nimport { NavLink, Route } from 'react-router-dom';\nimport TableHead from './TableHead';\nimport ArrivalsDetails from './ArrivalsDetails';\nimport DayChangersArrival from './dayChangersArrival';\n\nconst localtime = (time) => {\n  const numbers = new Date(time).toLocaleTimeString('uk-UA');\n\n  return numbers;\n};\n\nconst Arrival = ({\n  arrival, activeDay, yesterday, today, tomorrow, props, setItemForDetails,\n}) => {\n  const status = (item) => {\n    if (item.status === 'LN') {\n      return `Landed ${localtime(item.timeLandFact)}`;\n    }\n\n    switch (item.status) {\n      case 'CX':\n        return 'Cancelled';\n      case 'FR':\n        return 'In flight';\n      case 'ON':\n        return 'On time';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <>\n      <DayChangersArrival\n        activeDay={activeDay}\n        yesterday={yesterday}\n        today={today}\n        tomorrow={tomorrow}\n        props={props}\n      />\n      <table>\n        <TableHead />\n\n        <tbody>\n          {arrival.map((item, index) => (\n            <>\n              <tr\n                key={item.ID}\n                className={index % 2 === 0 ? 'row oddRow' : 'row'}\n              >\n                <td className=\"cell terminal\">\n                  <span className={item.term === 'A' ? 'terminalA' : 'terminalD'}>\n                    {item.term}\n                  </span>\n                </td>\n                <td className=\"cell\">{new Date(item.timeToStand).toLocaleTimeString('uk-UA')}</td>\n                <td className=\"cell\">{item['airportFromID.city_en']}</td>\n                <td className=\"cell\">{status(item)}</td>\n                <td className=\"cell\">{item.airline.en.name}</td>\n                <td className=\"cell\">{item['carrierID.IATA'] + item.fltNo}</td>\n                <td className=\"cell lasetCell\">\n                  <NavLink to=\"/arrivalsDetails\" exact onClick={() => setItemForDetails([item])}>\n                    Flight details\n                  </NavLink>\n                </td>\n              </tr>\n\n            </>\n          ))}\n        </tbody>\n\n      </table>\n    </>\n  );\n};\n\nexport default Arrival;\n","import React from 'react';\nimport '../index.css';\n\nfunction SearchField() {\n  return (\n    <form className=\"search\" action>\n      <input className=\"searchInput\" />\n      <div className=\"searchButton\">\n        SEARCH\n      </div>\n    </form>\n  );\n}\n\nexport default SearchField;\n","import React from 'react';\nimport {\n  NavLink,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport './index.css';\nimport { airlines } from './api/api';\nimport Departure from './components/departure';\nimport Arrival from './components/arrival';\nimport SearchField from './components/searchField';\nimport DeparturesDetails from './components/DeparturesDetails';\nimport ArrivalsDetails from './components/ArrivalsDetails';\n\n// const date = new Date();\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      arrival: [],\n      departure: [],\n      arrivalToShow: [],\n      departureToShow: [],\n      details: [],\n    };\n  }\n\n  componentDidMount() {\n    this.airlinesScadule();\n  }\n\n  airlinesScadule = async() => {\n    const scadule = await airlines();\n\n    // debugger;\n    // console.log(scadule);\n    this.setState({\n      arrival: this.setRightTime(scadule.body.arrival),\n      departure: this.setRightTime(scadule.body.departure),\n    });\n    // console.log(this.state.departure);\n  }\n\n  setRightTime = (arr) => {\n    const arr2 = arr;\n    const arr1 = arr.map(item => new Date(item.timeToStand).toLocaleString());\n\n    for (let i = 0; i < arr.length; i++) {\n      arr2[i].timeToStand = arr1[i];\n    }\n\n    return arr2;\n  };\n\n  today = () => new Date().toLocaleDateString('uk-UA');\n\n  yesterday = () => new Date(new Date().setDate(new Date().getDate() - 1)).toLocaleDateString('uk-UA');\n\n  tomorrow = () => new Date(new Date().setDate(new Date().getDate() + 1)).toLocaleDateString('uk-UA');\n\n  activeDay = (day) => {\n    switch (day) {\n      case 'YESTERDAY':\n        this.setState(prevSate => ({\n          ...prevSate,\n          arrivalToShow: [...prevSate.arrival]\n            .filter(item => new Date(item.timeToStand).toLocaleDateString('uk-UA') === this.yesterday()),\n          departureToShow: [...prevSate.departure]\n            .filter(item => new Date(item.timeToStand).toLocaleDateString('uk-UA') === this.yesterday()),\n        }));\n        break;\n      case 'TODAY':\n        this.setState(prevSate => ({\n          ...prevSate,\n          arrivalToShow: [...prevSate.arrival]\n            .filter(item => new Date(item.timeToStand).toLocaleDateString('uk-UA') === this.today()),\n          departureToShow: [...prevSate.departure]\n            .filter(item => new Date(item.timeToStand).toLocaleDateString('uk-UA') === this.today()),\n        }));\n        break;\n      case 'TOMORROW':\n        this.setState(prevSate => ({\n          ...prevSate,\n          arrivalToShow: [...prevSate.arrival]\n            .filter(item => new Date(item.timeToStand).toLocaleDateString('uk-UA') === this.tomorrow()),\n          departureToShow: [...prevSate.departure]\n            .filter(item => new Date(item.timeToStand).toLocaleDateString('uk-UA') === this.tomorrow()),\n        }));\n        break;\n      default:\n        this.setState(prevSate => ({\n          ...prevSate,\n          arrivalToShow: [...prevSate.arrival]\n            .filter(item => new Date(item.timeToStand).toLocaleDateString('uk-UA') === this.today()),\n          departureToShow: [...prevSate.departure]\n            .filter(item => new Date(item.timeToStand).toLocaleDateString('uk-UA') === this.today()),\n        }));\n    }\n  }\n\n  setItemForDetails = (item) => {\n    // debugger\n    this.setState(prevState => ({\n      ...prevState,\n      details: item,\n    }));\n    // console.log(this.state.details);\n  }\n\n  render() {\n    const { departureToShow, arrivalToShow, details } = this.state;\n    // console.log(this.props)\n\n    return (\n      <div className=\"App\">\n        <h1>SEARCH FLIGHT</h1>\n        <Switch>\n          {details.map(item => (\n            <Route path=\"/arrivalsDetails\" exact>\n              <ArrivalsDetails\n                logo={item.airline.en.logoName}\n                number={item.fltNo}\n                from={item['airportFromID.name_en']}\n                terminal={item.term}\n                planeNo={item.planeNo}\n                planeType={item['planeTypeID.name']}\n                arrivalTime={new Date(item.timeToStand).toLocaleTimeString('uk-UA')}\n              />\n            </Route>\n          ))}\n          {details.map(item => (\n            <Route path=\"/departuresDetails\" exact>\n              <DeparturesDetails\n                logo={item.airline.en.logoName}\n                number={item.fltNo}\n                to={item['airportToID.name_en']}\n                terminal={item.term}\n                planeNo={item.planeNo}\n                planeType={item['planeTypeID.name']}\n                arrivalTime={new Date(item.timeToStand).toLocaleTimeString('uk-UA')}\n              />\n            </Route>\n          ))}\n\n          <Route path=\"/\">\n            <SearchField />\n\n            <div className=\"tableAndButtons\">\n              <div className=\"buttons\">\n                <NavLink\n                  to=\"/departures\"\n                  exact\n                  activeClassName=\"activeButton\"\n                  className=\"button aName\"\n                >\n                Departures\n                </NavLink>\n\n                <NavLink\n                  to=\"/arrivals\"\n                  exact\n                  activeClassName=\"activeButton\"\n                  className=\"button aName\"\n                >\n                Arrivals\n                </NavLink>\n              </div>\n\n              <Route\n                path=\"/arrivals/:day?\"\n                render={props => (\n                  <Arrival\n                    {...props}\n                    arrival={arrivalToShow}\n                    activeDay={this.activeDay}\n                    yesterday={this.yesterday}\n                    today={this.today}\n                    tomorrow={this.tomorrow}\n                    setItemForDetails={this.setItemForDetails}\n                  />\n                )}\n              />\n\n              <Route\n                path=\"/departures/:day?\"\n                render={props => (\n                  <Departure\n                    {...props}\n                    departure={departureToShow}\n                    activeDay={this.activeDay}\n                    yesterday={this.yesterday}\n                    today={this.today}\n                    tomorrow={this.tomorrow}\n                    setItemForDetails={this.setItemForDetails}\n                  />\n                )}\n              />\n            </div>\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}